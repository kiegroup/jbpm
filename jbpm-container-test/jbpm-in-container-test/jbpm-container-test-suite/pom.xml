<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.jbpm</groupId>
    <artifactId>jbpm-in-container-test</artifactId>
    <version>7.58.0-SNAPSHOT</version>
  </parent>

  <artifactId>jbpm-container-test-suite</artifactId>

  <name>jBPM :: Container Test Suite</name>

  <description>jBPM Container Test Suite</description>

  <properties>
    <surefire.arg.line>
      -Dfile.encoding=${project.build.sourceEncoding}
      -Xms256m
      -Xmx1024m
    </surefire.arg.line>
    <wsdl.token>?wsdl</wsdl.token>


    <!-- WebLogic and WebSphere containers need to be already installed -->
    <weblogic.home>valid-path-has-to-be-specified-here-or-via-cmd-line</weblogic.home><!-- Example: /home/Servers/wls12130 -->
    <websphere.home>valid-path-has-to-be-specified-here-or-via-cmd-line</websphere.home><!-- Example: /home/Servers/WebSphere/AppServer -->

    <!-- Cargo internal references. -->
    <configurations.dir>${project.build.directory}/configurations</configurations.dir>
    <container.profile.dir>${configurations.dir}/cargo-profile</container.profile.dir>
    <container.log.file>${container.profile.dir}/profile-log.txt</container.log.file>

    <!-- Overridden until jboss-integration-platform-parent is upgraded -->
    <version.org.jboss.shrinkwrap.resolver>3.1.0</version.org.jboss.shrinkwrap.resolver>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jbpm</groupId>
        <artifactId>idep-jbpm-ejb-services</artifactId>
        <version>${version.org.kie}</version>
      </dependency>
      <dependency>
        <groupId>org.jbpm</groupId>
        <artifactId>idep-hibernate-core</artifactId>
        <version>${version.org.kie}</version>
      </dependency>
      <dependency>
        <groupId>org.jbpm</groupId>
        <artifactId>idep-jbpm</artifactId>
        <version>${version.org.kie}</version>
      </dependency>
      <dependency>
        <groupId>org.jbpm</groupId>
        <artifactId>idep-jbpm-persistence</artifactId>
        <version>${version.org.kie}</version>
      </dependency>
      <dependency>
        <groupId>org.jbpm</groupId>
        <artifactId>idep-rest</artifactId>
        <version>${version.org.kie}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- idep-jbpm-ejb-services and it's submodules are expected to be present in a local maven repository before
         running this test suite. As jBPM uses maven parallel build, this dependency has to be materialized. -->
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>idep-jbpm-ejb-services</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>idep-hibernate-core</artifactId>
      <exclusions>
        <exclusion>
          <groupId>javax.activation</groupId>
          <artifactId>javax.activation-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>idep-jbpm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>idep-jbpm-persistence</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>idep-rest</artifactId>
    </dependency>

    <!--H2 for Cargo plugin-->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-workitems-core</artifactId>
      <exclusions>
        <!-- excluded because of WAS libraries for Arquillian WAS connector -->
        <exclusion>
          <groupId>asm</groupId>
          <artifactId>asm</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-workitems-rest</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-workitems-webservice</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.xml.ws</groupId>
      <artifactId>jboss-jaxws-api_2.3_spec</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.xml.soap</groupId>
      <artifactId>javax.xml.soap-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-workitems-bpmn2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-human-task-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-test-util</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency> <!-- Dynamic dependency -->
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-bpmn2</artifactId>
    </dependency>
    <dependency> <!-- Dynamic dependency -->
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-xjc</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.shrinkwrap</groupId>
      <artifactId>shrinkwrap-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency> <!-- Dynamic dependency -->
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-spi</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-api-maven</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-spi-maven</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- For JMS -->
    <dependency>
      <groupId>org.hornetq</groupId>
      <artifactId>hornetq-core-client</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hornetq</groupId>
      <artifactId>hornetq-jms-client</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss</groupId>
      <artifactId>jboss-remote-naming</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.xnio</groupId>
          <artifactId>xnio-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.remoting</groupId>
          <artifactId>jboss-remoting</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.jms</groupId>
      <artifactId>jboss-jms-api_2.0_spec</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>javax.persistence-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.transaction</groupId>
      <artifactId>jboss-transaction-api_1.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.xnio</groupId>
      <artifactId>xnio-api</artifactId>
    </dependency>

    <!-- In-memory web container for REST WIH testing -->
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-undertow</artifactId>
    </dependency>

    <!-- EJB Services tests -->
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-services-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-services-ejb-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-kie-services</artifactId>
      <scope>test</scope>
      <!-- Exclude Aether since it collides with Maven Artifact Resolver (formerly Aether)
           brought by ShrinkWrap Resolver on a client classpath -->
      <exclusions>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-aether-provider</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.aether</groupId>
          <artifactId>aether-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.aether</groupId>
          <artifactId>aether-util</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.aether</groupId>
          <artifactId>aether-impl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.aether</groupId>
          <artifactId>aether-spi</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.aether</groupId>
          <artifactId>aether-transport-wagon</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.aether</groupId>
          <artifactId>aether-connector-basic</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Webservices Metadata API needed for JDK11+ -->
    <dependency>
      <groupId>javax.jws</groupId>
      <artifactId>javax.jws-api</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Needed for JDK 11 -->
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Needed for JDK 11 -->
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
      <testResource>
        <directory>src/test/resources/arquillian/${container.id}</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <executions>
            <!--To override kie-parent definition of executions we have to add our execution-->
            <execution>
              <id>myExecution</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
            <execution>
              <phase>none</phase>
            </execution>
          </executions>
          <configuration>
            <failIfNoTests>false</failIfNoTests>
            <includes>
              <include>**/*Test.java</include>
            </includes>
            <groups>${includes}</groups>
            <excludedGroups>${excludes}</excludedGroups>
            <argLine>${surefire.arg.line}</argLine>
            <systemPropertyVariables>
              <project.version>${project.version}</project.version>
              <settings.localRepository>${settings.localRepository}</settings.localRepository>
              <!--Container port for as-client tests-->
              <container.port>${container.port}</container.port>
              <container.id>${container.id}</container.id>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <groups>${includes}</groups>
            <excludedGroups>${excludes}</excludedGroups>
            <argLine>${surefire.arg.line}</argLine>
            <skip>true</skip>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven2-plugin</artifactId>
          <configuration>
            <container>
              <containerId>${container.id}</containerId>
              <timeout>600000</timeout>
              <systemProperties combine.children="append">
                <org.jbpm.deploy.sync.enabled>false</org.jbpm.deploy.sync.enabled>
                <!--Container port for in-container tests-->
                <container.port>${container.port}</container.port>
                <!-- Fixes issue when Tomcat hangs during deployment due to insufficient amount of entropy.
                     The property specifies less secure source of entropy, which is fine for testing.
                     See https://wiki.apache.org/tomcat/HowTo/FasterStartUp#Entropy_Source for more info -->
                <java.security.egd>file:/dev/./urandom</java.security.egd>
              </systemProperties>
              <dependencies combine.children="append"/>
              <output>${container.log.file}</output>
            </container>
            <deployables combine.children="append"/>
            <configuration>
              <home>${container.profile.dir}</home>
              <properties>
                <cargo.servlet.port>${container.port}</cargo.servlet.port>
              </properties>
              <users combine.children="append">
                <!-- users we use in tests-->
                <user>
                  <name>ibek</name>
                  <password>ibek1234;</password>
                  <roles>
                    <role>admin</role>
                    <role>rest-all</role>
                    <role>rest-client</role>
                    <role>guest</role>
                  </roles>
                </user>
                <user>
                  <name>mary</name>
                  <password>mary1234-</password>
                  <roles>
                    <role>engineering</role>
                    <role>admin</role>
                    <role>analyst</role>
                    <role>rest-all</role>
                    <role>rest-client</role>
                    <role>guest</role>
                  </roles>
                </user>
                <user>
                  <name>john</name>
                  <password>john1234-</password>
                  <roles>
                    <role>engineering</role>
                    <role>admin</role>
                    <role>analyst</role>
                    <role>rest-all</role>
                    <role>rest-client</role>
                    <role>guest</role>
                  </roles>
                </user>
                <user>
                  <name>guest</name>
                  <password>guest</password>
                  <roles>
                    <role>analyst</role>
                    <role>guest</role>
                    <role>rest-all</role>
                    <role>rest-client</role>
                  </roles>
                </user>
                <user>
                  <name>Administrator</name>
                  <password>admin1234;</password>
                  <roles>
                    <role>admin</role>
                    <role>rest-all</role>
                    <role>rest-client</role>
                  </roles>
                </user>
              </users>
            </configuration>
          </configuration>
          <executions>
            <execution>
              <id>start-container</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>start</goal>
              </goals>
            </execution>
            <execution>
              <id>stop-container</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>stop</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>wildfly</id>
      <activation>
        <property>
          <name>container.profile</name>
          <value>wildfly</value>
        </property>
      </activation>
      <properties>
        <container.id>wildfly23x</container.id>
        <container.port>8080</container.port>
        <org.jbpm.persistence.ds>java:/jdbc/jbpm</org.jbpm.persistence.ds>
        <container.tm>org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform</container.tm>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <type>installed</type>
                  <artifactInstaller>
                    <groupId>org.wildfly</groupId>
                    <artifactId>wildfly-dist</artifactId>
                    <version>${version.org.wildfly}</version>
                  </artifactInstaller>
                  <dependencies>
                    <dependency>
                      <groupId>com.h2database</groupId>
                      <artifactId>h2</artifactId>
                    </dependency>
                  </dependencies>
                </container>
                <configuration>
                  <properties>
                    <cargo.jboss.configuration>standalone-full</cargo.jboss.configuration>
                    <cargo.jvmargs>-Xmx1536m</cargo.jvmargs>
                    <!-- Datasource -->
                    <cargo.datasource.datasource.jbpm>
                      cargo.datasource.driver=${org.jbpm.datasource.driver.class}|
                      cargo.datasource.url=${org.jbpm.datasource.connection.url}|
                      cargo.datasource.jndi=${org.jbpm.persistence.ds}|
                      cargo.datasource.username=${org.jbpm.datasource.username}|
                      cargo.datasource.password=${org.jbpm.datasource.password}|
                      cargo.datasource.transactionsupport=XA_TRANSACTION
                    </cargo.datasource.datasource.jbpm>
                  </properties>
                </configuration>
              </configuration>
            </plugin>
            <plugin>
              <artifactId>maven-failsafe-plugin</artifactId>
              <configuration>
                <groups>org.jbpm.test.container.groups.EAP</groups>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
      <dependencies>
        <!--Arquillian connector-->
        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-remote</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>eap7</id>
      <activation>
        <property>
          <name>container.profile</name>
          <value>eap7</value>
        </property>
      </activation>
      <properties>
        <container.id>wildfly23x</container.id>
        <container.port>8080</container.port>
        <org.jbpm.persistence.ds>java:/jdbc/jbpm</org.jbpm.persistence.ds>
        <container.tm>org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform</container.tm>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <type>installed</type>
                  <zipUrlInstaller>
                    <url>${eap7.download.url}</url>
                  </zipUrlInstaller>
                  <dependencies>
                    <dependency>
                      <groupId>com.h2database</groupId>
                      <artifactId>h2</artifactId>
                    </dependency>
                  </dependencies>
                </container>
                <configuration>
                  <properties>
                    <cargo.jboss.configuration>standalone-full</cargo.jboss.configuration>
                    <cargo.jvmargs>-Xmx1536m</cargo.jvmargs>
                    <!-- Datasource -->
                    <cargo.datasource.datasource.jbpm>
                      cargo.datasource.driver=${org.jbpm.datasource.driver.class}|
                      cargo.datasource.url=${org.jbpm.datasource.connection.url}|
                      cargo.datasource.jndi=${org.jbpm.persistence.ds}|
                      cargo.datasource.username=${org.jbpm.datasource.username}|
                      cargo.datasource.password=${org.jbpm.datasource.password}|
                      cargo.datasource.transactionsupport=XA_TRANSACTION
                    </cargo.datasource.datasource.jbpm>
                  </properties>
                </configuration>
              </configuration>
            </plugin>
            <plugin>
              <artifactId>maven-failsafe-plugin</artifactId>
              <configuration>
                <groups>org.jbpm.test.container.groups.EAP</groups>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
      <dependencies>
        <!--Arquillian connector-->
        <!--It is originally for wildfly but it works for EAP7 as well so far-->
        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-remote</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>tomcat9</id>
      <activation>
        <property>
          <name>container.profile</name>
          <value>tomcat9</value>
        </property>
      </activation>
      <properties>
        <container.id>tomcat9x</container.id>
        <container.port>8080</container.port>
        <org.jbpm.persistence.ds>java:comp/env/jbpmDs</org.jbpm.persistence.ds>
        <container.tm>JBossTS</container.tm>
        <org.jbpm.datasource.driver.class>org.h2.jdbcx.JdbcDataSource</org.jbpm.datasource.driver.class>
        <org.jbpm.datasource.driver.factory>org.apache.tomcat.jdbc.naming.GenericNamingResourcesFactory</org.jbpm.datasource.driver.factory>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <type>installed</type>
                  <artifactInstaller>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat</artifactId>
                    <version>${version.tomcat}</version>
                  </artifactInstaller>
                  <systemProperties>
                    <tomcat.home>${project.build.directory}/cargo/configurations/tomcat9x</tomcat.home>
                    <jbpm.tsr.jndi.lookup>java:comp/env/TransactionSynchronizationRegistry</jbpm.tsr.jndi.lookup>
                    <hibernate.connection.release_mode>after_transaction</hibernate.connection.release_mode>
                    <org.jboss.logging.provider>jdk</org.jboss.logging.provider>
                  </systemProperties>
                  <dependencies>
                    <dependency>
                      <groupId>com.h2database</groupId>
                      <artifactId>h2</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>javax.persistence</groupId>
                      <artifactId>javax.persistence-api</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>org.slf4j</groupId>
                      <artifactId>slf4j-api</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>org.slf4j</groupId>
                      <artifactId>slf4j-jdk14</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>org.jboss.spec.javax.security.jacc</groupId>
                      <artifactId>jboss-jacc-api_1.5_spec</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>org.jboss.spec.javax.transaction</groupId>
                      <artifactId>jboss-transaction-api_1.2_spec</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>org.jboss.integration</groupId>
                      <artifactId>narayana-tomcat</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>org.jboss.narayana.jta</groupId>
                      <artifactId>narayana-jta</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>org.jboss</groupId>
                      <artifactId>jboss-transaction-spi</artifactId>
                    </dependency>
                    <dependency>
                      <groupId>org.jboss.logging</groupId>
                      <artifactId>jboss-logging</artifactId>
                    </dependency>
                  </dependencies>
                </container>
                <configuration>
                  <properties>
                    <cargo.jvmargs>-Xmx1024m</cargo.jvmargs>
                    <cargo.start.jvmargs>-Dcom.sun.management.jmxremote.port=8089
                      -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false
                    </cargo.start.jvmargs>
                  </properties>
                  <users>
                    <!-- needed by Arquillian for EWS -->
                    <user>
                      <name>ewsAdmin</name>
                      <password>ewsAdmin</password>
                      <roles>
                        <role>manager-script</role>
                      </roles>
                    </user>
                  </users>
                </configuration>
              </configuration>
            </plugin>
            <plugin>
              <artifactId>maven-failsafe-plugin</artifactId>
              <configuration>
                <groups>org.jbpm.test.container.groups.EWS</groups>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>

      <dependencyManagement>
        <dependencies>
          <!--Arquillian connector-->
          <!-- arquillian-tomcat-remote-9 not released yet -->
          <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-tomcat-remote-7</artifactId>
            <version>1.0.0.CR7</version>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <dependencies>
        <!-- Deps needed by Tomcat 9 -->
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-jdk14</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.spec.javax.security.jacc</groupId>
          <artifactId>jboss-jacc-api_1.5_spec</artifactId>
          <scope>test</scope>
        </dependency>

        <!--Arquillian connector-->
        <dependency>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
          <scope>test</scope>
        </dependency>
        <!-- arquillian-tomcat-remote-9 not released yet -->
        <dependency>
          <groupId>org.jboss.arquillian.container</groupId>
          <artifactId>arquillian-tomcat-remote-7</artifactId>
          <scope>test</scope>
        </dependency>
        <!-- Narayana integration -->
        <dependency>
          <groupId>org.jboss.integration</groupId>
          <artifactId>narayana-tomcat</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.narayana.jta</groupId>
          <artifactId>narayana-jta</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss</groupId>
          <artifactId>jboss-transaction-spi</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.logging</groupId>
          <artifactId>jboss-logging</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>oracle-wls-12</id>
      <activation>
        <property>
          <name>container.profile</name>
          <value>oracle-wls-12</value>
        </property>
      </activation>
      <properties>
        <container.id>weblogic122x</container.id>
        <container.port>7001</container.port>
        <container.tm>org.hibernate.service.jta.platform.internal.WeblogicJtaPlatform</container.tm>
        <org.jbpm.persistence.ds>jdbc/jbpm</org.jbpm.persistence.ds>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <type>installed</type>
                  <home>${weblogic.home}/wlserver</home>
                  <dependencies>
                    <dependency>
                      <groupId>com.h2database</groupId>
                      <artifactId>h2</artifactId>
                    </dependency>
                  </dependencies>
                </container>
                <configuration>
                  <type>standalone</type>
                  <properties>
                    <cargo.jvmargs>-Xmx1024m</cargo.jvmargs>
                    <!-- Datasource -->
                    <cargo.datasource.datasource.jbpm>
                      cargo.datasource.driver=${org.jbpm.datasource.driver.class}|
                      cargo.datasource.url=${org.jbpm.datasource.connection.url}|
                      cargo.datasource.jndi=${org.jbpm.persistence.ds}|
                      cargo.datasource.username=${org.jbpm.datasource.username}|
                      cargo.datasource.password=${org.jbpm.datasource.password}|
                      cargo.datasource.transactionsupport=XA_TRANSACTION
                    </cargo.datasource.datasource.jbpm>
                  </properties>
                </configuration>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-failsafe-plugin</artifactId>
              <configuration>
                <groups>org.jbpm.test.container.groups.WLS</groups>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>

      <dependencyManagement>
        <dependencies>
          <!--Arquillian connector-->
          <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-wls-remote-12.1.x</artifactId>
            <version>1.0.1.Final</version>
            <exclusions>
              <!--
                   Following artifacts are from wls-common module which is a parent of the arquillian-wls-remote-12.1.x
                   adapter. However, these dependencies are only needed by REST-based wls adapters. Therefore, they
                   are excluded so they don't cause issues with certain artifacts on a wls side like org.glassfish.hk2
                   which would be loaded twice - once from wlclient.jar and once as transitive dependencies of these
                   artifacts
              -->
              <exclusion>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-client</artifactId>
              </exclusion>
              <exclusion>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-json-processing</artifactId>
              </exclusion>
              <exclusion>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-multipart</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>org.jboss.arquillian.container</groupId>
          <artifactId>arquillian-wls-remote-12.1.x</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>was9</id>
      <activation>
        <property>
          <name>container.profile</name>
          <value>was9</value>
        </property>
      </activation>
      <properties>
        <container.id>websphere9</container.id>
        <container.port>9080</container.port>
        <!--WebSphere has to use this H2 driver class for pooling datasource-->
        <org.jbpm.datasource.driver.class>org.h2.jdbcx.JdbcDataSource</org.jbpm.datasource.driver.class>
        <org.jbpm.persistence.ds>jdbc/jbpm</org.jbpm.persistence.ds>
        <container.tm>org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform</container.tm>
        <!--Different web service URL for WebSphere has to be used-->
        <wsdl.token>/SimpleService.wsdl</wsdl.token>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <!-- There is no Cargo for WebSphere 9 yet so we have to use the previous one -->
                  <containerId>websphere85x</containerId>
                  <type>installed</type>
                  <home>${websphere.home}</home>
                  <timeout>240000</timeout>
                  <dependencies>
                    <dependency>
                      <groupId>com.h2database</groupId>
                      <artifactId>h2</artifactId>
                    </dependency>
                  </dependencies>
                  <systemProperties>
                    <!-- Disable implicit bean archives scanning to speed up deployment -->
                    <com.ibm.ws.cdi.enableImplicitBeanArchives>false</com.ibm.ws.cdi.enableImplicitBeanArchives>
                  </systemProperties>
                </container>
                <configuration>
                  <type>standalone</type>
                  <properties>
                    <cargo.jvmargs>-Xms2g -Xmx2g</cargo.jvmargs>
                    <cargo.websphere.classloader.mode>PARENT_LAST</cargo.websphere.classloader.mode>
                    <cargo.websphere.war.classloader.policy>SINGLE</cargo.websphere.war.classloader.policy>
                    <!-- Datasource -->
                    <cargo.datasource.datasource.jbpm>
                      cargo.datasource.driver=${org.jbpm.datasource.driver.class}|
                      cargo.datasource.url=${org.jbpm.datasource.connection.url}|
                      cargo.datasource.jndi=${org.jbpm.persistence.ds}|
                      cargo.datasource.username=${org.jbpm.datasource.username}|
                      cargo.datasource.password=${org.jbpm.datasource.password}|
                      cargo.datasource.transactionsupport=XA_TRANSACTION
                      cargo.datasource.properties=serverName=${org.jbpm.datasource.hostname};port=${org.jbpm.datasource.port};portNumber=${org.jbpm.datasource.port};databaseName=${org.jbpm.datasource.dbName};currentSchema=${org.jbpm.persistence.schema};driverType=4
                    </cargo.datasource.datasource.jbpm>
                  </properties>
                </configuration>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-failsafe-plugin</artifactId>
              <configuration>
                <groups>org.jbpm.test.container.groups.WAS</groups>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>

      <dependencyManagement>
        <dependencies>
          <!--Arquillian connector-->
          <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-was-remote-9</artifactId>
            <version>1.0.0.Final-BXMS-SNAPSHOT</version>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>org.jboss.arquillian.container</groupId>
          <artifactId>arquillian-was-remote-9</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>custom-container</id>
      <activation>
        <!-- The tests are not executed unless specific container profile is used. Disable cargo by default. -->
        <activeByDefault>true</activeByDefault>
        <property>
          <name>custom-container</name>
        </property>
      </activation>
      <properties>
        <cargo.maven.skip>true</cargo.maven.skip>
      </properties>
    </profile>
    <profile>
      <!-- Integration tests are skipped by default. They are activated when specific container profile is used. -->
      <id>skipITs-by-default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-failsafe-plugin</artifactId>
              <configuration>
                <skipITs>true</skipITs>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
